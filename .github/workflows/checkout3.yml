name: CI/CD Docker3

# 트리거를 수행할 브랜치를 지정합니다.
on:
  push:
    branches: [ main ]

# 환경설정
env:
  VERSION: ${{ github.sha }}
  NAME: devops


jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean bootJar

    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.USERNAME }}/devops:${{ env.VERSION }} .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
    
    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: \
        docker push ${{ secrets.USERNAME }}/devops:${{ env.VERSION }}
        sudo docker stop app1 && sudo docker rm app1 || true
        sudo docker run -d --network ubuntu_my_bridge_network --name app1 --restart always ${{ secrets.DOCKER_USERNAME }}/devops:${{ env.VERSION }}
        sudo docker stop app2 && sudo docker rm app2 || true
        sudo docker run -d --network ubuntu_my_bridge_network --name app2 --restart always ${{ secrets.DOCKER_USERNAME }}/devops:${{ env.VERSION }}
        sudo docker image prune -af
        # 사용되지 않는 도커이미지를 삭제한다
        
