spring.application.name=devopt

#이 프로젝트는 여러대의 was에서 Code를 cache 하기 위한 방법을 구현 예
#한 대의 was에서는 ConcurrentMapCacheManager를 사용하고 케싱한다 
#특정 was에서 케싱의 자료를 변경하면 -> DB 자료 변경 되면 관련된 
#모든 was에서 관리하는 케싱을 무효화 해야한다      
#이를 redis을 이용하여 pub/sub를 사용하여 여러 was의 케시를 동기화 한다
#참조 : https://hudi.blog/local-cache-synchronization-with-redis-pub-sub/
#실행시 최소 2대이상의 was를 실행 해야하다 
#작업 폴더에서 실행 
# 8090 포트로 실행  
#  gradlew bootrun --args '--server.port=8090'
#
# 8091 포트로 실행  
#  gradlew bootrun --args '--server.port=8091'
# 
 server.port=8090

# 수정사항 생길시 자동 재빌드를 위한 코드
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

#DataSource 관련 설정 
spring.datasource.url=jdbc:mariadb://localhost:3306/koreatech_db
spring.datasource.username=koreatech
spring.datasource.password=1004koreatech
spring.datasource.driverClassName=org.mariadb.jdbc.Driver

mybatis.mapper-locations=classpath:mybatis/mappers/*.xml

#매퍼 파일에서 alias를 쓰기위한 패키지 지정
mybatis.type-aliases-package=kr.ac.koreantech.devopt.model

spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379